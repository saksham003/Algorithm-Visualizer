{"version":3,"sources":["style/styled.js","components/utility/DropDown.js","components/utility/Slider.js","helpers/speedSetter.js","algorithms/selectionSort.js","algorithms/mergeSort.js","algorithms/quickSort.js","helpers/algoSelector.js","algorithms/bubbleSort.js","algorithms/insertionSort.js","components/utility/ColorInfo.js","components/Info.js","components/Controller.js","helpers/getWidth.js","helpers/swap.js","helpers/colorPicker.js","helpers/generate-array.js","helpers/animations.js","components/Visualizer.js","App.js","reportWebVitals.js","index.js"],"names":["Bar","styled","div","props","width","height","color","DropDown","label","array","getSelected","className","htmlFor","name","id","onChange","event","preventDefault","curr","target","options","selectedIndex","value","map","Slider","onRangeChange","min","max","isDisabled","type","disabled","speeds","speedSetter","swap","arr","xp","yp","temp","mergeSortHelper","mainArray","startIdx","endIdx","auxiliaryArray","animations","middleIdx","Math","floor","k","i","j","push","doMerge","quickSortHelper","start","end","index","pivotValue","pivotIndex","partition","algoMapping","copyArray","slice","length","lastELement","min_idx","n","N","ColorInfo","description","Info","Controller","arrayLength","setArrayLength","setSpeed","setAlgorithm","onRandomizeClickHandler","isSorting","onStartClick","useState","selectedSpeed","setSelectedSpeed","selectedAlgo","setSelectedAlgo","useEffect","Fragment","onClick","title","Object","keys","getWidth","colorPicker","idx","comparasions","swapping","sortedArr","includes","generateArray","range","random","sortingCompletedAnimation","coloringFunc","forEach","element","setTimeout","prev","Visualizer","initialState","algorithm","speed","setArray","setComparisions","setSwapping","setIsSorting","setSortedArr","comparision","swapped","isSorted","App","isDark","setIsDark","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64cf6b42.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\n// const colors = ['black','yellow','green']\r\n// Exported to: Visualizer\r\nconst Bar = styled.div`\r\n  width: ${(props) => props.width}px;\r\n  height: ${(props) => props.height}px;\r\n  background-color: ${(props) => props.color};\r\n  display: inline-block;\r\n  margin: auto 1px;\r\n  margin-bottom: 0;\r\n  color: white;\r\n`;\r\n\r\nexport { Bar };\r\n","import React from \"react\";\r\n\r\nconst DropDown = ({ label, array, getSelected }) => {\r\n  const onSelectChange = (event) => {\r\n    event.preventDefault();\r\n    let curr = event.target.options;\r\n    getSelected(curr[curr.selectedIndex].value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <label className=\"mr-3\" htmlFor=\"algorithms\">\r\n        {label}\r\n      </label>\r\n      <select\r\n        className=\"p-2 border border-double bg-gray-100 \r\n        focus:outline-none focus:ring-2 ring-gray-300 dark:ring-gray-500\r\n        dark:bg-gray-600 dark:border-gray-500 transition-{background-color} duration-500\"\r\n        name={label}\r\n        id={label}\r\n        onChange={onSelectChange}\r\n      >\r\n        {array.map((value) => {\r\n          return (\r\n            <option className=\"p-2\" key={value} value={`${value}`}>\r\n              {value}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DropDown;\r\n","import React from \"react\";\r\n\r\nconst Slider = ({label, value, onRangeChange, min, max, isDisabled} ) => {\r\n  return (\r\n    <div>\r\n      <label className=\"mr-3\" htmlFor=\"arrayLengthSlider\">\r\n        {label} {value}\r\n      </label>\r\n      <input\r\n        onChange={onRangeChange}\r\n        type=\"range\"\r\n        min={min}\r\n        max={max}\r\n        value={value}\r\n        id={label}\r\n        className=\"w-60\"\r\n        disabled={isDisabled}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n","export const speeds = [\"0.5x\", \"1x\", \"2x\", \"3x\", \"4x\"];\r\nexport const speedSetter = {\r\n  \"0.5x\": \"600\",\r\n  \"1x\": \"400\",\r\n  \"2x\": \"200\",\r\n  \"3x\": \"100\",\r\n  \"4x\": \"50\",\r\n};\r\n\r\n\r\n","\r\nexport function selectionSort(arr)\r\n{\r\n    var array = arr.slice()\r\n    const animations = []\r\n    var n = array.length\r\n    var i, j, min_idx;\r\n \r\n    for (i = 0; i < n-1; i++)\r\n    {\r\n        min_idx = i;\r\n        for (j = i + 1; j < n; j++){\r\n            if (array[j] < array[min_idx])\r\n            min_idx = j;\r\n            animations.push([[j,min_idx], false, null])\r\n        }\r\n        animations.push([[i,min_idx], true, i])\r\n        swap(array,min_idx, i);\r\n    }\r\n    return animations\r\n}\r\n\r\nfunction swap(arr,xp, yp)\r\n{\r\n    var temp = arr[xp];\r\n    arr[xp] = arr[yp];\r\n    arr[yp] = temp;\r\n}\r\n\r\n","export function mergeSort(arr) {\r\n    const animations = [];\r\n    const auxiliaryArray = arr.slice();\r\n    const array = arr.slice()\r\n    mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\r\n    return animations;\r\n  }\r\n  \r\n  function mergeSortHelper(\r\n    mainArray,\r\n    startIdx,\r\n    endIdx,\r\n    auxiliaryArray,\r\n    animations,\r\n  ) {\r\n    if (startIdx === endIdx) return;\r\n    const middleIdx = Math.floor((startIdx + endIdx) / 2);\r\n    mergeSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\r\n    mergeSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\r\n    doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\r\n  }\r\n  \r\n  function doMerge(\r\n    mainArray,\r\n    startIdx,\r\n    middleIdx,\r\n    endIdx,\r\n    auxiliaryArray,\r\n    animations,\r\n  ) {\r\n    let k = startIdx;\r\n    let i = startIdx;\r\n    let j = middleIdx + 1;\r\n    while (i <= middleIdx && j <= endIdx) {\r\n      animations.push([[i, j], false, null]);\r\n      if (auxiliaryArray[i] <= auxiliaryArray[j]) {\r\n        animations.push([[k, auxiliaryArray[i]], true, null]);\r\n        mainArray[k++] = auxiliaryArray[i++];\r\n      } else {\r\n        animations.push([[k, auxiliaryArray[j]], true, null]);\r\n        mainArray[k++] = auxiliaryArray[j++];\r\n      }\r\n    }\r\n    while (i <= middleIdx) {\r\n      animations.push([[i, i], false, null]);\r\n      animations.push([[k, auxiliaryArray[i]], true, null]);\r\n      mainArray[k++] = auxiliaryArray[i++];\r\n    }\r\n    while (j <= endIdx) {\r\n      animations.push([[j, j], false, null]);\r\n      animations.push([[k, auxiliaryArray[j]], true, null]);\r\n      mainArray[k++] = auxiliaryArray[j++];\r\n    }\r\n  }","const animations = [];\r\nexport function quickSort(array) {\r\n  const arr = array.slice();\r\n  var start = 0;\r\n  var end = arr.length - 1;\r\n  quickSortHelper(arr, start, end);\r\n  return animations;\r\n}\r\n\r\nfunction quickSortHelper(arr, start, end) {\r\n  if (start >= end) {\r\n    return;\r\n  }\r\n  let index = partition(arr, start, end);\r\n\r\n  quickSortHelper(arr, start, index - 1);\r\n  quickSortHelper(arr, index + 1, end);\r\n}\r\nfunction partition(arr, start, end) {\r\n  const pivotValue = arr[end];\r\n  let pivotIndex = start;\r\n  for (let i = start; i < end; i++) {\r\n    if (arr[i] < pivotValue) {\r\n      animations.push([[i, pivotIndex], true, null]);\r\n      [arr[i], arr[pivotIndex]] = [arr[pivotIndex], arr[i]];\r\n      pivotIndex++;\r\n    }\r\n  }\r\n  animations.push([[pivotIndex, end], true, null]);\r\n  [arr[pivotIndex], arr[end]] = [arr[end], arr[pivotIndex]];\r\n  return pivotIndex;\r\n}\r\n","import bubbleSort from \"../algorithms/bubbleSort\";\r\nimport { selectionSort } from \"../algorithms/selectionSort\";\r\nimport { insertionSort } from \"../algorithms/insertionSort\";\r\nimport { mergeSort } from \"../algorithms/mergeSort\";\r\nimport { quickSort } from \"../algorithms/quickSort\";\r\n\r\nexport const algoMapping = {\r\n  \"Bubble Sort\": bubbleSort,\r\n  \"Selection Sort\": selectionSort,\r\n  \"Insertion Sort\": insertionSort,\r\n  \"Merge Sort\": mergeSort,\r\n  \"Quick Sort\": quickSort,\r\n};\r\n","function bubbleSort(array) {\r\n  let copyArray = array.slice();\r\n  const animations = [];\r\n\r\n  for (var i = 0; i < copyArray.length; i++) {\r\n    let lastELement = copyArray.length - i - 1;\r\n    for (var j = 0; j < lastELement; j++) {\r\n      if (copyArray[j] > copyArray[j + 1]) {\r\n        animations.push([\r\n          [j, j + 1],\r\n          true,\r\n          j === lastELement - 1 ? lastELement : null,\r\n        ]);\r\n        var temp = copyArray[j];\r\n        copyArray[j] = copyArray[j + 1];\r\n        copyArray[j + 1] = temp;\r\n      } else {\r\n        animations.push([\r\n          [j, j + 1],\r\n          false,\r\n          j === lastELement - 1 ? lastELement : null,\r\n        ]);\r\n      }\r\n    }\r\n  }\r\n  return animations;\r\n}\r\n\r\nexport default bubbleSort;\r\n","export function insertionSort(arr) {\r\n    const array = arr.slice()\r\n    const animations = []\r\n    let N = array.length;\r\n    let i, j;\r\n \r\n    for (i = 1; i < N; i++) {\r\n        j = i;\r\n \r\n        while (j > 0 && array[j] < array[j - 1]) {\r\n            animations.push([[j-1,j], true, null])\r\n            // Swap array[j] and array[j-1]\r\n            let temp = array[j];\r\n            array[j] = array[j - 1];\r\n            array[j - 1] = temp;\r\n            j -= 1;\r\n        }\r\n    }\r\n    return animations\r\n}","import React from 'react'\r\n\r\nconst ColorInfo = ({color, description}) => {\r\n    return (\r\n        <div className=\"flex flex-row items-center mr-20 \">\r\n           <div className={`w-4 h-4 ${color} inline-block mr-3`}></div> \r\n           {description}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ColorInfo\r\n","import React from \"react\";\r\nimport ColorInfo from \"./utility/ColorInfo\";\r\n\r\nconst Info = () => {\r\n  return (\r\n    <div className=\"w-11/12 bg-gray-100 flex flex-col p-10 mt-4 shadow-md\r\n    dark:bg-gray-700 dark:text-gray-50 transition duration-500\">\r\n      <div className=\"flex flex-row\">\r\n        <ColorInfo color=\"bg-pink-400\" description=\"Swapping\" />\r\n        <ColorInfo color=\"bg-yellow-300\" description=\"Comparing\"/>\r\n        <ColorInfo color=\"bg-green-500\" description=\"Sorted\"/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Info;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport DropDown from \"./utility/DropDown\";\r\nimport Slider from \"./utility/Slider\";\r\nimport { speeds, speedSetter } from \"../helpers/speedSetter\";\r\nimport { algoMapping } from \"../helpers/algoSelector\";\r\nimport Info from \"./Info\";\r\n\r\nconst Controller = ({\r\n  arrayLength,\r\n  setArrayLength,\r\n  setSpeed,\r\n  setAlgorithm,\r\n  onRandomizeClickHandler,\r\n  isSorting,\r\n  onStartClick,\r\n}) => {\r\n  const [selectedSpeed, setSelectedSpeed] = useState(\"1x\");\r\n  const [selectedAlgo, setSelectedAlgo] = useState(\"Bubble Sort\");\r\n\r\n  useEffect(() => {\r\n    setAlgorithm(selectedAlgo);\r\n  }, [selectedAlgo, setAlgorithm]);\r\n\r\n  useEffect(() => {\r\n    setSpeed(speedSetter[selectedSpeed]);\r\n  }, [selectedSpeed, setSpeed]);\r\n\r\n  const onRangeChange = (event) => {\r\n    event.preventDefault();\r\n    setArrayLength(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        className=\"w-screen py-3 px-16 flex justify-evenly items-center bg-gray-50 \r\n    dark:bg-gray-700 dark:text-gray-100 transition-{background-color} duration-500 \"\r\n      >\r\n        <button\r\n          className=\" text-gray-500 hover:text-gray-400 text-xl dark:text-gray-300\"\r\n          onClick={onRandomizeClickHandler}\r\n          title=\"Randomize\"\r\n          disabled={isSorting}\r\n        >\r\n          <i className=\"fas fa-random\"></i>\r\n        </button>\r\n\r\n        <DropDown\r\n          label={\"Select Algorithm:\"}\r\n          array={Object.keys(algoMapping)}\r\n          getSelected={setSelectedAlgo}\r\n        />\r\n        <Slider\r\n          label={\"Array Size:\"}\r\n          value={arrayLength}\r\n          onRangeChange={onRangeChange}\r\n          min={\"10\"}\r\n          max={\"100\"}\r\n          isDisabled={isSorting}\r\n        />\r\n        <DropDown\r\n          label={\"Speed\"}\r\n          array={speeds}\r\n          getSelected={setSelectedSpeed}\r\n        />\r\n        <button\r\n          className=\"py-2 px-8 bg-gray-200 dark:bg-gray-500 dark:text-gray-100\r\n          transition-{background-color} duration-500\"\r\n          onClick={onStartClick}\r\n        >\r\n          Start\r\n        </button>\r\n      </div>\r\n      <Info/>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Controller;\r\n","const getWidth = (arrayLength) => {\r\n    if (arrayLength <= 20) {\r\n        return 65\r\n    }\r\n    else if (arrayLength > 20 && arrayLength <= 40) {\r\n        return 35\r\n    }\r\n    else if (arrayLength > 40 && arrayLength <= 60) {\r\n        return 22\r\n    }\r\n    else if (arrayLength > 60 && arrayLength <= 75) {\r\n        return 17\r\n    }\r\n    else if (arrayLength > 75 && arrayLength <= 100){\r\n        return 12\r\n    }\r\n\r\n}\r\n\r\nexport default getWidth","const swap = (arr, i, j) => {\r\n  let temp = arr[i];\r\n  arr[i] = arr[j];\r\n  arr[j] = temp;\r\n};\r\n\r\nexport default swap;\r\n","const NORMAL_COLOR = \"#03A9F4\";\r\nconst COMPARING_COLOR = \"#FFEE58\";\r\nconst SWAPPING_COLOR = \"#EC407A\";\r\nconst SORTED_COLOR = \"#7CB342\";\r\n\r\nconst colorPicker = (idx, comparasions, swapping, sortedArr) => {\r\n  if (comparasions.includes(idx)) {\r\n    return COMPARING_COLOR;\r\n  }\r\n  if (swapping.includes(idx)) {\r\n    return SWAPPING_COLOR;\r\n  }\r\n  if (sortedArr.includes(idx)) {\r\n    return SORTED_COLOR;\r\n  } else {\r\n    return NORMAL_COLOR;\r\n  }\r\n};\r\n\r\nexport default colorPicker;\r\n","const MIN_ARRAY_NUM = 10;\r\nconst MAX_ARRAY_NUM = 400;\r\n\r\nfunction generateNum(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n  }\r\n\r\n  export default function generateArray(range) {\r\n    const arr = [];\r\n    for (let i = 0; i < range; i++) {\r\n      arr.push(generateNum(MIN_ARRAY_NUM, MAX_ARRAY_NUM ));\r\n    }\r\n    return arr;\r\n  }\r\n\r\n","const sortingCompletedAnimation = (array, coloringFunc) => {\r\n  array.forEach((element, idx) => {\r\n    setTimeout(() => {  \r\n        coloringFunc((prev) => {\r\n            return [...prev,idx]\r\n        })\r\n    }, 30 * idx);\r\n  });\r\n};\r\n\r\nexport default sortingCompletedAnimation;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Bar } from \"../style/styled\";\r\nimport Controller from \"./Controller\";\r\n// helpers\r\nimport { algoMapping } from \"../helpers/algoSelector\";\r\nimport getWidth from \"../helpers/getWidth\";\r\nimport swap from \"../helpers/swap\";\r\nimport colorPicker from \"../helpers/colorPicker\";\r\nimport generateArray from \"../helpers/generate-array\";\r\nimport sortingCompletedAnimation from \"../helpers/animations\";\r\n\r\nconst Visualizer = () => {\r\n  const [arrayLength, setArrayLength] = useState(20);\r\n  const initialState = generateArray(arrayLength);\r\n  const [algorithm, setAlgorithm] = useState(\"Bubble Sort\");\r\n  const [speed, setSpeed] = useState(100);\r\n  const [array, setArray] = useState(initialState);\r\n\r\n  const [comparasions, setComparisions] = useState([]);\r\n  const [swapping, setSwapping] = useState([]);\r\n  const [isSorting, setIsSorting] = useState(false);\r\n  const [sortedArr, setSortedArr] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setSortedArr([]);\r\n    setArray(generateArray(arrayLength));\r\n  }, [arrayLength]);\r\n\r\n  const onRandomizeClickHandler = () => {\r\n    if (isSorting) {\r\n      return;\r\n    }\r\n    setArray(generateArray(arrayLength));\r\n    setSortedArr([]);\r\n  };\r\n\r\n  const onStartClick = () => {\r\n    if (isSorting) {\r\n      return;\r\n    }\r\n    setIsSorting(true);\r\n    const animations = algoMapping[algorithm](array);\r\n\r\n    animations.forEach(([comparision, swapped, isSorted], idx) => {\r\n      setTimeout(() => {\r\n        if (isSorted !== null) {\r\n          setSortedArr((prev) => {\r\n            return [...prev, isSorted];\r\n          });\r\n        }\r\n        if (swapped === true) {\r\n          let [i, j] = comparision;\r\n\r\n          if (algorithm === \"Insertion Sort\") {\r\n            setSwapping([j]);\r\n            setComparisions([i]);\r\n          } \r\n          else {\r\n            setSwapping([i, j]);\r\n          }\r\n          setComparisions([]);\r\n          (algorithm === \"Merge Sort\") ? array[i] = j :swap(array, i, j);\r\n          setArray(array);\r\n        } else if (swapped === false) {\r\n          let [i, j] = comparision;\r\n          setSwapping([]);\r\n          setComparisions([i, j]);\r\n        }\r\n      }, speed * idx);\r\n    });\r\n\r\n    setTimeout(() => {\r\n      setComparisions([]);\r\n      setSwapping([]);\r\n      setIsSorting(false);\r\n      sortingCompletedAnimation(array, setSortedArr);\r\n    }, speed * animations.length);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"w-full flex flex-row justify-center h-[420px]\">\r\n        {array &&\r\n          array.map((value, idx) => {\r\n            return (\r\n              <Bar\r\n                height={value}\r\n                key={idx}\r\n                color={colorPicker(idx, comparasions, swapping, sortedArr)}\r\n                width={getWidth(arrayLength)}\r\n              />\r\n            );\r\n          })}\r\n      </div>\r\n\r\n      <Controller\r\n        arrayLength={arrayLength}\r\n        setArrayLength={setArrayLength}\r\n        onRandomizeClickHandler={onRandomizeClickHandler}\r\n        setSpeed={setSpeed}\r\n        setAlgorithm={setAlgorithm}\r\n        isSorting={isSorting}\r\n        onStartClick={onStartClick}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Visualizer;\r\n","import React, { useState } from \"react\";\nimport Visualizer from \"./components/Visualizer\";\n\nfunction App() {\n  const [isDark, setIsDark] = useState(false);\n\n  const darkToggle = () => {\n    setIsDark((prev) => !prev);\n  };\n\n  return (\n    <div className={`${isDark && \"dark\"}`}>\n      <div\n        className={`flex flex-col items-center h-screen bg-white  dark:bg-gray-800 transition duration-500`}\n      >\n        <div\n          className=\"flex flex-row w-screen text-xl py-5 px-8 bg-gray-100 text-gray-800 font-bold \n          shadow-md dark:bg-gray-700 dark:text-gray-100 transition duration-500 \"\n        >\n          <div className=\"mr-auto \">Sorting Algorithm Visualizer</div>\n          <div onClick={darkToggle} className=\"ml-auto mr-3 cursor-pointer\">\n            {!isDark && <i className=\"fas fa-moon\"></i>}\n            {isDark && <i className=\"fas fa-sun\"></i>}\n          </div>\n        </div>\n        <Visualizer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}